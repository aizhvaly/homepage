name: CI

on: [push]

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Generate build number
        uses: einaregilsson/build-number@v1
        with:
          token: ${{secrets.github_token}}
      - name: Version notify
        run: |
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëâüèæ Homepage build *#${BUILD_NUMBER}*: pipeline started.\"}" \
          ${{ secrets.TEST_WEBHOOK }}
      - name: Upload build number
        uses: actions/upload-artifact@v1
        with:
          name: BUILD_NUMBER
          path: BUILD_NUMBER
  build-app:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
      - name: Download build number
        uses: actions/download-artifact@v1
        with:
          name: BUILD_NUMBER
      - name: Restore build number
        uses: einaregilsson/build-number@v1
      - name: Build
        env:
          EMAIL_USER: ${{secrets.EMAIL_USER}}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          GHOST_ENDPOINT: ${{ secrets.GHOST_ENDPOINT }}
          GHOST_API_KEY: ${{ secrets.GHOST_API_KEY }}
          MAILCHIMP_KEY: ${{ secrets.MAILCHIMP_KEY }}
          MAILCHIMP_LIST_RU: ${{ secrets.MAILCHIMP_LIST_RU }}
          MAILCHIMP_LIST_EN: ${{ secrets.MAILCHIMP_LIST_EN }}
          GATSBY_GRAPHQL_IDE: playground
          DIALOG_WEBHOOK: ${{ secrets.DIALOG_WEBHOOK }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_DSN_PUBLIC: ${{ secrets.SENTRY_DSN_PUBLIC }}
        run: |
          npm ci
          npm run build
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëåüèæ Homepage build *#$BUILD_NUMBER*: application build successful.\"}" \
          ${{ secrets.TEST_WEBHOOK }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: public
  build-docker:
    needs: build-app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download app build artifact
        uses: actions/download-artifact@v1
        with:
          name: app
          path: public
      - name: Download app build artifac
        uses: actions/download-artifact@v1
        with:
          name: BUILD_NUMBER
      # - name: Build
      #   run: |
      #     - docker login -u="${REGISTRY_USER}" -p="${REGISTRY_PASSWORD}" "${REGISTRY}"
      - name: Notify
        run: |
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëåüèæ Homepage build *#$BUILD_NUMBER:* docker image ready. test\"}" \
          ${{ secrets.TEST_WEBHOOK }}
